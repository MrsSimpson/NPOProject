<Activity mc:Ignorable="sap sap2010" x:Class="RetriveData" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:maes="clr-namespace:Microsoft.Activities.Extensions.Statements;assembly=Microsoft.Activities.Extensions" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="workbookPath_in" Type="InArgument(x:String)" />
    <x:Property Name="itemsNeededDict_out" Type="OutArgument(scg:Dictionary(x:String, x:String))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>860,2712</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>RetriveData_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="22">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="20">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="RetrieveData" sap:VirtualizedContainerService.HintSize="820,2632" sap2010:WorkflowViewState.IdRef="Sequence_8">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Default="[Nothing]" Name="dtSupply" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="index" />
      <Variable x:TypeArguments="ui:WorkbookApplication" Default="[Nothing]" Name="workBook" />
      <Variable x:TypeArguments="x:Boolean" Name="workBookExists" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign sap:VirtualizedContainerService.HintSize="798,60" sap2010:WorkflowViewState.IdRef="Assign_6">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[itemsNeededDict_out]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[new Dictionary(Of String, String)]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:PathExists DisplayName="Path Exists" Exists="[workBookExists]" sap:VirtualizedContainerService.HintSize="798,89" sap2010:WorkflowViewState.IdRef="PathExists_1" Path="[workBookPath_in]" PathType="File" />
    <If Condition="[workBookExists = False]" sap:VirtualizedContainerService.HintSize="798,208" sap2010:WorkflowViewState.IdRef="If_3">
      <If.Then>
        <Throw Exception="[new BusinessRuleException]" sap:VirtualizedContainerService.HintSize="216,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
      </If.Then>
    </If>
    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel: Read Sheets &amp; Get Supplies Needed" sap:VirtualizedContainerService.HintSize="798,1964" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" Workbook="[workBook]" WorkbookPath="[workbookPath_in]">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence sap:VirtualizedContainerService.HintSize="784,1855" sap2010:WorkflowViewState.IdRef="Sequence_9">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:MaximizeWindow Window="{x:Null}" ContinueOnError="True" DisplayName="Maximize Window" sap:VirtualizedContainerService.HintSize="762,22" sap2010:WorkflowViewState.IdRef="MaximizeWindow_1" />
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="762,1701" sap2010:WorkflowViewState.IdRef="Sequence_5">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="740,1609" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[workBook.GetSheets]">
                <ui:ForEach.Body>
                  <ActivityAction x:TypeArguments="x:Object">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:Object" Name="sheet" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="724,1476" sap2010:WorkflowViewState.IdRef="Sequence_4">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="702,61" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[sheet.ToString]" />
                      <ui:ExcelReadRange AddHeaders="True" DataTable="[dtSupply]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="702,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" SheetName="[sheet.ToString]">
                        <ui:ExcelReadRange.Range>
                          <InArgument x:TypeArguments="x:String">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                        </ui:ExcelReadRange.Range>
                      </ui:ExcelReadRange>
                      <If sap2010:Annotation.AnnotationText="Ensures that the sheet has data in it, in addition to the header" Condition="[dtSupply.Rows.Count &gt; 1]" sap:VirtualizedContainerService.HintSize="702,1184" sap2010:WorkflowViewState.IdRef="If_2">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <ui:ForEachRow CurrentIndex="[index]" DataTable="[dtSupply]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="577,1010" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                            <ui:ForEachRow.Body>
                              <ActivityAction x:TypeArguments="sd:DataRow">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="547,863" sap2010:WorkflowViewState.IdRef="Sequence_3">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="ui:GenericValue" Name="supplyQty" />
                                  </Sequence.Variables>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="525,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Int32">[index + 2]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <ui:ExcelReadCell Cell="[&quot;A&quot; + index.ToString]" DisplayName="Read: Quantity" sap:VirtualizedContainerService.HintSize="525,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_1" SheetName="[sheet.ToString]">
                                    <ui:ExcelReadCell.Result>
                                      <OutArgument x:TypeArguments="ui:GenericValue">[supplyQty]</OutArgument>
                                    </ui:ExcelReadCell.Result>
                                  </ui:ExcelReadCell>
                                  <If Condition="[supplyQty &lt;&gt; &quot;&quot; and supplyQty &lt;= 10]" sap:VirtualizedContainerService.HintSize="525,572" sap2010:WorkflowViewState.IdRef="If_1">
                                    <If.Then>
                                      <Sequence sap:VirtualizedContainerService.HintSize="400,425" sap2010:WorkflowViewState.IdRef="Sequence_2">
                                        <Sequence.Variables>
                                          <Variable x:TypeArguments="x:String" Name="brand" />
                                          <Variable x:TypeArguments="x:String" Name="link" />
                                        </Sequence.Variables>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:ExcelReadCell Cell="[&quot;B&quot; + index.ToString]" DisplayName="Read: item Name" sap:VirtualizedContainerService.HintSize="378,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_2" SheetName="[sheet.ToString]">
                                          <ui:ExcelReadCell.Result>
                                            <OutArgument x:TypeArguments="x:String">[brand]</OutArgument>
                                          </ui:ExcelReadCell.Result>
                                        </ui:ExcelReadCell>
                                        <ui:ExcelReadCell Cell="[&quot;E&quot; + index.ToString]" DisplayName="Read: item Link" sap:VirtualizedContainerService.HintSize="378,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_3" SheetName="[sheet.ToString]">
                                          <ui:ExcelReadCell.Result>
                                            <OutArgument x:TypeArguments="x:String">[link]</OutArgument>
                                          </ui:ExcelReadCell.Result>
                                        </ui:ExcelReadCell>
                                        <maes:AddToDictionary x:TypeArguments="x:String, x:String" Dictionary="[itemsNeededDict_out]" DisplayName="Add to itemsNeeded dictionary" sap:VirtualizedContainerService.HintSize="378,135" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_1" Key="[brand]" Value="[link]" />
                                      </Sequence>
                                    </If.Then>
                                  </If>
                                </Sequence>
                              </ActivityAction>
                            </ui:ForEachRow.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:ForEachRow>
                        </If.Then>
                      </If>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEach.Body>
              </ui:ForEach>
            </Sequence>
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ExcelApplicationScope>
    <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="798,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_1" Workbook="[workBook]" />
  </Sequence>
</Activity>